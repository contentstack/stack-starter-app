{"bltd4ae0193c4512870":{"stackHeaders":{"api_key":"api_key"},"urlPath":"/extensions/bltd4ae0193c4512870","uid":"bltd4ae0193c4512870","created_at":"2022-06-01T06:23:07.290Z","updated_at":"2022-06-01T06:23:07.290Z","tags":[],"_version":1,"title":"Ace Editor","config":{},"type":"field","data_type":"text","multiple":false,"srcdoc":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Ace Editor Extension</title>\n<style>\nbody{ margin:0;}\n#editor{\nmin-height:300px;\n}\n</style>\n<!--\nLoad the Extensions API that is used to communicate with the containing app.\n-->\n<script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n<!--\nWe use lodash.throttle to avoid spamming the API with changes\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.4/lodash.min.js\"></script>\n<!--\nInclude ace editor core script.\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/ace.js\"></script>\n<!--\nAdd editor theme and syntax highlighting mode scripts.\nFind more here:https://www.jsdelivr.com/package/npm/ace-builds?path=src-min\n-->\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/mode-handlebars.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/ace-builds@1.2.9/src-min-noconflict/theme-monokai.js\"></script>\n</head>\n<body>\n<pre id=\"editor\"></pre>\n<script>\n// initialise Field Extension\nwindow.extensionField ={};\n\n// find editor element\nvar editorElement = document.getElementById(\"editor\");\n\n// initialise variable for ace editor plugin\nvar editor ={};\n\n\nContentstackUIExtension.init().then(function(extension){\n\n// make extension object globally available\nextensionField = extension;\n\n\n// update the field height \nextensionField.window.updateHeight();\n\n// Get current ace editor field value from Contentstack and update the element\nvar value = extensionField.field.getData() || '';\n// Configure Ace editor\neditor = ace.edit('editor')\neditor.setTheme('ace/theme/monokai')\neditor.session.setMode('ace/mode/handlebars')\n\nif(value)\neditor.setValue(value)\n//\neditor.on('focus', function(event, editor){\n extensionField.field.setFocus();\n});\n\n// Listen to change events and fire an update every 500ms\neditor.on('change', _.throttle(updateFieldValue, 500,{ leading:false}))\n})\n\n\nfunction updateFieldValue (){\nvar value = editor.getValue()\nextensionField.field.setData(value).catch(function(error){\nconsole.log('error in setting data',error)\n})\n}\n</script>\n</body>\n</html>"},"blt2ceadc6d8f8e2f13":{"stackHeaders":{"api_key":"api_key"},"urlPath":"/extensions/blt2ceadc6d8f8e2f13","uid":"blt2ceadc6d8f8e2f13","created_at":"2022-06-01T06:23:04.875Z","updated_at":"2022-06-01T06:23:04.875Z","tags":[],"_version":1,"title":"Color Picker","config":{},"type":"field","data_type":"text","multiple":false,"srcdoc":"<html>\n<head>\n <meta name=\"viewport\"content=\"width=device-width, initial-scale=1.0\"/>\n <link href=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.css\"rel=\"stylesheet\"type=\"text/css\"media=\"all\">\n <script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n</head>\n<body>\n<input type=\"color\"id=\"html5colorpicker\"onchange=\"colorChange()\"onclick=\"setFocus()\">\n<script>\n// initialise Field Extension\nwindow.extensionField ={};\n\n// find color input element\nvar colorPickerElement = document.getElementById(\"html5colorpicker\");\n\nContentstackUIExtension.init().then(function(extension){\n// make extension object globally available\nextensionField = extension;\n\n// update the field height \nextensionField.window.updateHeight();\n\n// Set default color in Contentstack\nvar defaultColor = \"#000000\";\nif(!extensionField.field.getData().length){\nextensionField.field.setData(defaultColor);\n}\n\n// Get current color field value from Contentstack and update the color picker input element\ncolorPickerElement.value = extensionField.field.getData() || defaultColor;\n \n})\n\n// On color change event, pass new value to Contentstack\nfunction colorChange(){\nextensionField.field.setFocus();\nextensionField.field.setData(colorPickerElement.value);\n}\n\nfunction setFocus(){\n extensionField.field.setFocus();\n}\n</script>\n</body>\n</html>"}}